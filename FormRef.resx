<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>