<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        urQAAAAASUVORK5CYII=
</value>
  </data>
</root>